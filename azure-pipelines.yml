trigger:
- master


strategy:
  matrix:
    linux-release:
      imageName: 'ubuntu-16.04'
      BUILD_CONFIGURATION: RelWithDebInfo
    mac-release:
      imageName: 'macos-10.14'
      BUILD_CONFIGURATION: RelWithDebInfo
    windows-release:
      imageName: 'vs2017-win2016'
      BUILD_CONFIGURATION: RelWithDebInfo


pool:
  vmImage: $(imageName)

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
    displayName: 'Use Python 3.7'

  - bash: |
      python -m pip install cpplint --no-binary :all:
      cpplint --extensions=c,h --headers=h --recursive caterva
    displayName: 'Execute cpplint'

  - bash: |
      export PATH=$PATH:$(Build.SourcesDirectory)/build:$(Build.SourcesDirectory)/build/$(BUILD_CONFIGURATION)
    displayName: 'Export PATH'

  - bash: |
      cd c-blosc2/
      mkdir build
      cd build/
      cmake .. -DCMAKE_BUILD_TYPE=${BUILD_CONFIGURATION} ..
      cmake --build . --config ${BUILD_CONFIGURATION}
    displayName: 'Build caterva'

  - bash: |
      export PATH=$PATH:${BLOSC_DIR}:$(Build.SourcesDirectory)/build/$(BUILD_CONFIGURATION)
      cd build/
      ctest -C ${BUILD_CONFIGURATION} -T Test -V -L caterva
    displayName: 'Tests'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'CTest' # Options: JUnit, NUnit, VSTest, xUnit, cTest
      testResultsFiles: 'build/Testing/*/Test.xml'
    displayName: 'Publish Tests'
