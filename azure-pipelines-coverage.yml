trigger:
- master

strategy:
  matrix:
    linux-release:
      imageName: 'ubuntu-16.04'
      BUILD_CONFIGURATION: RelWithDebInfo
pool:
  vmImage: $(imageName)

steps:
  - bash: |
      export PATH=$PATH:$(Build.SourcesDirectory)/build

  - bash: |
      git submodule sync
      git submodule update --init --recursive
      displayName: Clone repos

  - bash: |
      mkdir build
      cd build/
      cmake -DCMAKE_BUILD_TYPE=$(BUILD_CONFIGURATION) -DENABLE_COVERAGE=TRUE ..
      cmake --build .
    displayName: 'Build caterva'

  - bash: |
      cd build/
      ctest -T Test
      ctest -D ExperimentalCoverage
    displayName: 'Tests'


  - bash: |
      yes | pip install fcovr
      mv build/CMakeFiles/caterva_static.dir/caterva/*.gc* caterva/
      mv caterva/caterva.c.gcno caterva/caterva.gcno
      mv caterva/caterva.c.gcda caterva/caterva.gcda

  - bash: |
      gcovr -v -r caterva/ --xml -o coverage.xml

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
