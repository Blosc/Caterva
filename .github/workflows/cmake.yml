name: CI CMake
on: [push, pull_request]
jobs:
  ci-cmake:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
          Ubuntu GCC,
          Ubuntu Clang,
          Windows MSVC Win32,
          Windows MSVC Win64,
          Windows GCC,
          macOS Clang,
          macOS GCC
        ]
        include:
          - name: Ubuntu GCC
            os: ubuntu-latest
            compiler: gcc

          - name: Ubuntu Clang
            os: ubuntu-latest
            compiler: clang

          - name: Windows MSVC Win32
            os: windows-latest
            compiler: cl
            cmake-args: -A Win32

          - name: Windows MSVC Win64
            os: windows-latest
            compiler: cl
            cmake-args: -A x64

          - name: Windows GCC
            os: windows-latest
            compiler: gcc
            cmake-args: -G Ninja

          - name: macOS Clang
            os: macOS-latest
            compiler: clang

          - name: macOS GCC
            os: macOS-latest
            compiler: gcc

    steps:
    - uses: actions/checkout@v1

    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux' && matrix.packages
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.packages }}
    - name: Install packages (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install ninja ${{ matrix.packages }}
    - name: Install packages (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install ninja ${{ matrix.packages }}
   
    - name: Build c-blosc2
      run: |
        git clone https://github.com/Blosc/c-blosc2.git
        cd c-blosc2/
        mkdir ${{ matrix.build-dir || '.not-used' }}
        cd ${{ matrix.build-dir || '.' }}
        cmake . ${{ matrix.cmake-args }} -DCMAKE_BUILD_TYPE=${{ matrix.build-config || 'Release' }} -DBUILD_SHARED_LIBS=OFF
        cmake --build . --config ${{ matrix.build-config || 'Release' }}

    - name: Generate project files
      run: |
        mkdir ${{ matrix.build-dir || '.not-used' }}
        cd ${{ matrix.build-dir || '.' }}
        cmake . ${{ matrix.cmake-args }} -DCMAKE_BUILD_TYPE=${{ matrix.build-config || 'Release' }} -DBLOSC_DIR=/home/runner/work/Caterva/Caterva/c-blosc2/blosc -DBLOSC_INCLUDE=/home/runner/work/Caterva/Caterva/c-blosc2/blosc
      env:
        CC: ${{ matrix.compiler }}
        CFLAGS: ${{ matrix.cflags }}
        LDFLAGS: ${{ matrix.ldflags }}
        CI: true

    - name: Compile source code
      run: |
        cd ${{ matrix.build-dir || '.' }}
        cmake --build . --config ${{ matrix.build-config || 'Release' }}
    - name: Run test cases
      run: |
        cd ${{ matrix.build-dir || '.' }}
        ctest -C Release --output-on-failure --max-width 120
